for(i in 1:length(cell_list)){
for (j in 1:(ncol(cell_list[[i]])-2)){
outcsv_name <- list.files(paste0(ssm_path, "/csv"))
outcsv_name2 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "\\."), outcsv_name)]
outcsv_name3 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "_sd\\."), outcsv_name)]
eval(parse(text = paste0(
"df_", i, "_", j, "_chl <- as.data.frame(data.table::fread('", ssm_path,"/csv/", outcsv_name2, "'))
devtools::use_data(df_", i, "_", j, "_chl, internal = TRUE)"
)))
}
}
df_1_1_chl
devtools::use_data(df_1_1_chl, internal = TRUE)
help(use_data)
use_data(df_1_1_chl, internal = TRUE)
library(devtools)
use_data(df_1_1_chl, internal = TRUE)
for(i in 1:length(cell_list)){
for (j in 1:(ncol(cell_list[[i]])-2)){
outcsv_name <- list.files(paste0(ssm_path, "/csv"))
outcsv_name2 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "\\."), outcsv_name)]
outcsv_name3 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "_sd\\."), outcsv_name)]
eval(parse(text = paste0(
"df_", i, "_", j, "_chl <- as.data.frame(data.table::fread('", ssm_path,"/csv/", outcsv_name2, "'))
devtools::use_data(df_", i, "_", j, "_chl, internal = TRUE)"
)))
}
}
for(i in 1:length(cell_list)){
for (j in 1:(ncol(cell_list[[i]])-2)){
outcsv_name <- list.files(paste0(ssm_path, "/csv"))
outcsv_name2 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "\\."), outcsv_name)]
outcsv_name3 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "_sd\\."), outcsv_name)]
eval(parse(text = paste0(
"df_", i, "_", j, "_chl <- as.data.frame(data.table::fread('", ssm_path,"/csv/", outcsv_name2, "'))
use_data(df_", i, "_", j, "_chl, internal = TRUE)"
)))
}
}
i=1
j=2
outcsv_name <- list.files(paste0(ssm_path, "/csv"))
outcsv_name2 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "\\."), outcsv_name)]
outcsv_name3 <- outcsv_name[grep(paste0(df_name, i, "_", res_name, j, "_sd\\."), outcsv_name)]
eval(parse(text = paste0(
"df_", i, "_", j, "_chl <- as.data.frame(data.table::fread('", ssm_path,"/csv/", outcsv_name2, "'))
use_data(df_", i, "_", j, "_chl, internal = TRUE)"
)))
system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm")
install.packages("../cellssm", repos = NULL, type = "source")
library(cellssm)
### Install the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
library(cellssm)
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
cell_list <- list(cell1, cell2, cell3, cell4)
system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm")
stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/)
stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/")
unlist(stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/"))
stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/")[[1]]
inp_dir <- stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/")[[1]]
inp_dir[length(inp_dir)]
inp_dir[-length(inp_dir)]
stringr::str_c(inp_dir[-length(inp_dir)], "/")
stringr::str_c(inp_dir[-length(inp_dir)], sep="/")
stringr::str_c(inp_dir[-length(inp_dir)], sep="/", collapse = NULL))
stringr::str_c(inp_dir[-length(inp_dir)], sep="/", collapse = NULL)
stringr::str_glue(inp_dir[-length(inp_dir)], sep="/")
paste(inp_dir[-length(inp_dir)], sep="/")
inp_dir[-length(inp_dir)]
paste(inp_dir[-length(inp_dir)], collapse = "/")
p
input_file <- stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/")[[1]]
input_dir <- paste(inp_file[-length(inp_file)], collapse = "/")
input_file <- stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/")[[1]]
input_dir <- paste(input_file[-length(input_file)], collapse = "/")
input_dir
glist <- lm_dist_beta(cell_list = cell_list, mvtime = chloroplast_mvtime,
ssm_path = input_dir,
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
input_dir
### Install the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
cell_list <- list(cell1, cell2, cell3, cell4)
input_file <- stringr::str_split(system.file("extdata", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/")[[1]]
input_dir <- paste(input_file[-length(input_file)], collapse = "/")
input_dir
input_file <- stringr::str_split(system.file("extdata", "common_model_mvtimenull.stan", package = "cellssm"), "/")[[1]]
input_file
system.file("extdata", "common_model_mvtimenull.stan", package = "cellssm")
input_file <- stringr::str_split(system.file("extdata/csv", "ssm_individual_cell4_chloroplast1.csv", package = "cellssm"), "/")[[1]]
input_file
input_file <- stringr::str_split(system.file("extdata", "common_model_mvtimenull.stan", package = "cellssm"), "/")[[1]]
input_dir <- paste(input_file[-length(input_file)], collapse = "/")
input_dir
glist <- lm_dist_beta(cell_list = cell_list, mvtime = chloroplast_mvtime,
ssm_path = input_dir,
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
glist[[1]]
ssm_file <- stringr::str_split(system.file("extdata", "individual_model.stan", package = "cellssm"), "/")[[1]]
ssm_path <- paste(ssm_file[-length(ssm_file)], collapse = "/")
ssm_path
glist <- lm_dist_beta(cell_list = cell_list, mvtime = chloroplast_mvtime,
ssm_path = ssm_path,
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Load data
data("Paramecium", "Paramecium_mvtime")
cell_list <- list(Paramecium)
# Specify the path of the output directory of [ssm_individual] or [ssm_KFAS]
# below, the path of system files is specified to show an example
ssm_file <- stringr::str_split(system.file("extdata", "individual_model.stan", package = "cellssm"), "/")[[1]]
ssm_path <- paste(ssm_file[-length(ssm_file)], collapse = "/")
ssm_path
glist <- lm_dist_beta(cell_list = cell_list, mvtime = Paramecium_mvtime,
ssm_path = ssm_path, ex_sign = "positive",
ssm_method = "Bayes", df_name = "experiment",
res_name = "Paramecium", ex_name = "heat",
unit1 = "millimeter", unit2 = "sec")
### Install the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
library(cellssm)
data("Paramecium", "Paramecium_mvtime")
cell_list <- list(Paramecium)
ssm_file <- stringr::str_split(system.file("extdata", "individual_model.stan", package = "cellssm"), "/")[[1]]
ssm_path <- paste(ssm_file[-length(ssm_file)], collapse = "/")
ssm_path
glist <- lm_dist_beta(cell_list = cell_list, mvtime = Paramecium_mvtime,
ssm_path = ssm_path, ex_sign = "positive",
ssm_method = "Bayes", df_name = "experiment",
res_name = "Paramecium", ex_name = "heat",
unit1 = "millimeter", unit2 = "sec")
glist[[1]]
glist[[2]]
glist[[3]]
glist[[4]]
glist[[5]]
### Install the package
devtools::document()
devtools::check()
### Install the package
devtools::document()
devtools::check()
help(suppressWarnings)
### Install the package
devtools::document()
### Install the package
devtools::document()
devtools::check()
### Install the package
devtools::document()
devtools::build_manual()
install.packages("../cellssm", repos = NULL, type = "source")
### .Rbuildignore
devtools::use_build_ignore("01_dist_vis", "02_ssm_individual")
### .Rbuildignore
library(devtools)
use_build_ignore("01_dist_vis", "02_ssm_individual")
help("use_build_ignore")
usethis::use_build_ignore("01_dist_vis", "02_ssm_individual")
usethis::use_build_ignore(c("01_dist_vis", "02_ssm_individual"))
### .Rbuildignore
usethis::use_build_ignore(c("01_dist_vis", "02_ssm_individual", "03_ssm_KFAS",
"04_nomodel", "05_lm_dist_beta", "06_lm_dist_start",
"07_lm_signal", "08_ssm_common",
"11_dist_vis", "12_ssm_individual", "13_ssm_KFAS",
"14_nomodel", "15_lm_dist_beta", "16_lm_dist_start",
"17_lm_signal", "18_ssm_common"))
### Install the package
devtools::document()
devtools::build_manual()
install.packages("../cellssm", repos = NULL, type = "source")
devtools::check()
### Install the package
devtools::document()
### Install the package
devtools::load_all()
help(ssm_individual)
### Install the package
devtools::document()
devtools::check()
### Install the package
devtools::document()
devtools::check()
# Binding variables locally to the function
fit <- lwr <- upr <-  NULL
lwr
fit
# Binding variables locally to the function
fit <- lwr <- upr <- mean_b <- most_b <- s_b_ex <- mean_alpha <- most_alpha <-
predicted <- ..rr.label.. <- NULL
..rr.label..
### Install the package
devtools::document()
devtools::check()
## Binding variables locally to the function
index <- time <- alpha_2.5% <- alpha_97.5% <- alpha_50% <- NULL
## Binding variables locally to the function
index <- time <- `alpha_2.5%` <- `alpha_97.5%` <- `alpha_50%` <- NULL
alpha_97.5%
`alpha_97.5%`
### Install the package
devtools::document()
devtools::check()
### Install the package
devtools::document()
devtools::check()
dectools::use_readme_rmd()
devtools::use_readme_rmd()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
dell1
cell1
library(cellssm)
cell1
data(cell1)
cell1
help(build_readme)
help("cellssm")
### Install the package
devtools::document()
help("cellssm")
### Install the package
devtools::document()
help("cellssm")
### Install the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
devtools::build_readme()
devtools::install_github("hnishio/cellssm")
### Install the package
devtools::document()
devtools::build_manual()
### Install the package
devtools::document()
devtools::build_manual()
help(cell1)
### Install the package
devtools::document()
help(cell1)
### Install the package
devtools::document()
devtools::build_manual()
### Install the package
devtools::document()
devtools::build_manual()
R.version
### Install the package
devtools::document()
devtools::check()
devtools::check()
devtools::build_manual()
### Install the package
devtools::document()
### Install the package
devtools::document()
devtools::check()
devtools::check()
help(install_github)
file.exists("/tmp")
file.exists("/tmp")
### Install the package
devtools::document()
# Set the path to which CmdStan was installed
cmdstanr::set_cmdstan_path("~/cmdstan/")
# Load data
data("chloroplasts")
cell_list <- list(cell1, cell2, cell3, cell4)
# Load packages
library(cellssm)
# Load data
data("chloroplasts")
cell_list <- list(cell1, cell2, cell3, cell4)
# Load data
data("cell1")
data("cell1", "cell2", "cell3", "cell4", "visual")
cell_list <- list(cell1)
ssm_individual(cell_list = cell_list, visual = visual, out = "02_ssm_individual",
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min")
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
cell_list <- list(cell1, cell2, cell3, cell4)
ssm_common(cell_list = cell_list, mvtime = chloroplast_mvtime, out = "08_ssm_common",
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min")
devtools::use_testthat()
devtools::uses_testthat()
help(use_testthat)
usethis::use_testthat()
use_test()
help(use_test
)
usethis::use_test()
usethis::use_test()
help(skip_on_cran)
expect_equal(2 * 2, 4)
help(expect_true)
usethis::use_test()
library(cellssm)
data("cell1", "cell2", "cell3", "cell4")
cell_list <- list(cell1, cell2, cell3, cell4)
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min")
class(glist[[1]])
class(glist)
class(glist[[1]])[1]
class(glist[[1]])[2]
#usethis::use_test()
devtools::test()
list.dirs("/Users/hnishio/Documents/児玉先生/develop_cellssm_package/cellssm/tests/testthat/03_ssm_KFAS/pdf")
list.files("/Users/hnishio/Documents/児玉先生/develop_cellssm_package/cellssm/tests/testthat/03_ssm_KFAS/pdf")
length(list.files("03_ssm_KFAS/pdf"))
#usethis::use_test()
devtools::test()
usethis::use_test()
#usethis::use_test()
devtools::test()
#usethis::use_test()
devtools::test()
#usethis::use_test()
devtools::test()
#usethis::use_test()
devtools::test()
usethis::use_test()
#usethis::use_test()
devtools::test()
usethis::use_test()
#usethis::use_test()
devtools::test()
usethis::use_test()
#usethis::use_test()
devtools::test()
### Install the package
devtools::document()
devtools::check()
# Make vignette
usethis::use_vignette("cellssm_vignette")
### Install the package
devtools::document()
devtools::check()
devtools::check()
help(ggplot2)
help(KFAS)
help(cellssm)
help("rstan")
help("sample")
outcsv_name <- list.files(paste0("inst/extdata", "/csv"))
outcsv_name
outcsv_name2 <- outcsv_name[grep(paste0("sd\\.", "csv"), outcsv_name)]
outcsv_name2
grep(paste0("sd\\.", "csv"), outcsv_name)
outcsv_name2 <- outcsv_name[-grep(paste0("sd\\.", "csv"), outcsv_name)]
outcsv_name3 <- outcsv_name[grep(paste0("sd\\.", "csv"), outcsv_name)]
outcsv_name2
outcsv_name3 <- outcsv_name[grep(paste0("sd\\.", "csv"), outcsv_name)]
outcsv_name3
i=1
df_out <- as.data.frame(data.table::fread(outcsv_name2[i]))
df_out <- as.data.frame(data.table::fread(paste0("inst/extdata", "/csv", outcsv_name2[i])))
df_out <- as.data.frame(data.table::fread(paste0("inst/extdata", "/csv/", outcsv_name2[i])))
df_out
df_out[,stringr::str_ends(names(df_out), "50%")]
stringr::str_ends(names(df_out), "50%")
df_out2 <- cbind(df_out[,1:2], df_out[,stringr::str_ends(names(df_out), "50%")])
df_out2
data.table::fwrite(df_out2, file = paste0("inst/extdata", "/csv/", outcsv_name2[i]))
df_out_sd <- as.data.frame(data.table::fread(paste0("inst/extdata", "/csv/", outcsv_name3[i])))
df_out_sd
df_out_sd2 <- cbind(df_out_sd[,1], df_out_sd[,stringr::str_ends(names(df_out_sd), "50%")])
df_out_sd2
df_out_sd[,1]
df_out[,1:2]
class(df_out)
class(df_out_sd)
df_out_sd[,1:2]
df_out_sd2 <- cbind(df_out_sd[,1:2], df_out_sd[,stringr::str_ends(names(df_out_sd), "50%")])
df_out_sd2
stringr::str_ends(names(df_out_sd), "50%")
df_out_sd
cbind(df_out_sd[,1:2], df_out_sd[,stringr::str_starts(names(df_out_sd), "50")])
df_out_sd2 <- cbind(df_out_sd[,1], df_out_sd[,stringr::str_ends(names(df_out_sd), "50%")])
df_out_sd2
class(df_out_sd2)
df_out_sd2 <- cbind(df_out_sd[,1], df_out_sd[,stringr::str_ends(names(df_out_sd), "50%")])
df_out_sd2 <- as.data.frame(df_out_sd2)
names(df_out_sd2) <- c("s_name", "50%")
df_out_sd2
data.table::fwrite(df_out_sd2, file = paste0("inst/extdata", "/csv/", outcsv_name3[i]))
for(i in 1:length(outcsv_name2)){
df_out <- as.data.frame(data.table::fread(paste0("inst/extdata", "/csv/", outcsv_name2[i])))
df_out2 <- cbind(df_out[,1:2], df_out[,stringr::str_ends(names(df_out), "50%")])
data.table::fwrite(df_out2, file = paste0("inst/extdata", "/csv/", outcsv_name2[i]))
df_out_sd <- as.data.frame(data.table::fread(paste0("inst/extdata", "/csv/", outcsv_name3[i])))
df_out_sd2 <- cbind(df_out_sd[,1], df_out_sd[,stringr::str_ends(names(df_out_sd), "50%")])
df_out_sd2 <- as.data.frame(df_out_sd2)
names(df_out_sd2) <- c("s_name", "50%")
data.table::fwrite(df_out_sd2, file = paste0("inst/extdata", "/csv/", outcsv_name3[i]))
}
library(cellssm)
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
### Install the package
devtools::document()
cell_list <- list(cell1, cell2, cell3, cell4)
ssm_file <- stringr::str_split(system.file("extdata", "individual_model.stan",
install.packages("../cellssm", repos = NULL, type = "source")
library(cellssm)
ssm_file <- stringr::str_split(system.file("extdata", "individual_model.stan",
package = "cellssm"), "/")[[1]]
ssm_path <- paste(ssm_file[-length(ssm_file)], collapse = "/")
ssm_path
glist <- lm_dist_beta(cell_list = cell_list, mvtime = chloroplast_mvtime,
ssm_path = ssm_path,
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
out <- "05_lm_dist_beta"
if(file.exists(out)==FALSE){
dir.create(out, recursive=TRUE)
}
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggplot2::ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta.pdf"),
g, height = 104, width = 168, units = "mm"))
devtools::check()
help(sample)
data("chloroplast_mvtime")
chloroplast_mvtime
### Install the package
devtools::document()
### Install the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
library(cellssm)
ata("cell1", "cell2", "cell3", "cell4")
data("cell1", "cell2", "cell3", "cell4")
cell_list <- list(cell1, cell2, cell3, cell4)
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="inferno")
glist[[1]]
glist[[3]]
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="magma")
glist[[1]]
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="plasma")
glist[[1]]
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="viridis")
glist[[1]]
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="cividis")
glist[[1]]
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="mako")
glist[[1]]
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="rocket")
glist[[1]]
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col="turbo")
glist[[1]]
glist[[3]]
help(dist_vis)
### Install the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
help(dist_vis)
help(viridis)
??viridis
devtools::check()
viridisLite::cividis()
### Install the package
devtools::document()
library(cellssm)
data("cell1", "cell2", "cell3", "cell4")
cell_list <- list(cell1, cell2, cell3, cell4)
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col = "magma")
glist[[1]]
dist_vis
glist <- dist_vis(cell_list = cell_list,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", col = "turbo")
glist[[1]]
packageVersion("viridisLite")
devtools::check()
help(viridisLite)
??viridisLite
??viridis
### Install the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
