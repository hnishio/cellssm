install.packages("devtools")
### Test the package
devtools::document()
devtools::check()
#install.packages("devtools")
devtools::install_github("hnishio/cellssm")
# Load packages
library(cellssm)
# Set the path to which CmdStan was installed
cmdstanr::set_cmdstan_path("~/cmdstan/")
# Load data
data("cell1", "cell2", "cell3", "cell4", "visual")
cell_list <- list(cell1, cell2, cell3, cell4)
res_name = "chloroplast"; ex_name = "microbeam";
unit1 = "micrometer"; unit2 = "min"
seed=123; warmup=1000; sampling=1000; thin=3;
start_sensitivity = 5; ex_sign = "negative"; df_name = "cell";
df_idx = NULL; res_idx = NULL;
shade = TRUE; start_line = TRUE; ps = 7; theme_plot = "bw"
stepwise=c(99,90)
# Compile stan file
stan_file <- system.file("extdata", "individual_model.stan", package = "cellssm")
model <- cmdstanr::cmdstan_model(stan_file)
i=1
j=1
# File name
if(!is.null(df_idx) & !is.null(res_idx)){
file_name <- paste0(df_name, df_idx[j], "_", res_name, res_idx[j])
}else{
file_name <- paste0(df_name, i, "_", res_name, j)
}
# Estimation of observation error
vel <- diff(cell_list[[i]][,j+2])
sp_vel <- stats::smooth.spline(1:length(vel), vel, spar=0)
pred_vel <- stats::predict(sp_vel, 1:length(vel))
obs <- stats::sd(vel - pred_vel$y)
obs
vel - pred_vel$y
sqrt(sum((vel - pred_vel$y)^2) / length(vel))
sqrt(sum((vel - pred_vel$y)^2) / (length(vel)+1))
sqrt(sum((vel - pred_vel$y)^2) / (length(vel)-1))
pred_vel$y
vel
vel - pred_vel$y
difference <-vel - pred_vel$y
sd(difference)
sqrt(sum((difference - mean(difference))^2) / (length(difference)-1))
plot(vel)
lines(pred_vel$y)
sqrt(sum((vel - pred_vel$y)^2) / (length(vel)-1))
mean(difference)
sqrt(sum(difference^2) / (length(difference)-1))
sqrt(sum((difference - mean(difference))^2) / (length(difference)-1))
i=3;J-6
i=3;j=6
# Estimation of observation error
vel <- diff(cell_list[[i]][,j+2])
sp_vel <- stats::smooth.spline(1:length(vel), vel, spar=0)
pred_vel <- stats::predict(sp_vel, 1:length(vel))
#obs <- stats::sd(vel - pred_vel$y)
obs <- sqrt(sum((vel - pred_vel$y)^2) / (length(vel)-1))
difference <-vel - pred_vel$y
sd(difference)
sqrt(sum(difference^2) / (length(difference)-1))
sqrt(sum((difference - mean(difference))^2) / (length(difference)-1))
obs <- stats::sd(vel - pred_vel$y)
obs
obs <- sqrt(sum((vel - pred_vel$y)^2) / (length(vel)-1))
obs
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
#install.packages("devtools")
devtools::install_github("hnishio/cellssm")
### Test the package
devtools::document()
stan_file <- system.file("extdata", "common_model.stan", package = "cellssm")
model <- cmdstanr::cmdstan_model(stan_file)
# Set the path to which CmdStan was installed
cmdstanr::set_cmdstan_path("~/cmdstan/")
model <- cmdstanr::cmdstan_model(stan_file)
model <- cmdstanr::cmdstan_model(stan_file)
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
#install.packages("devtools")
devtools::install_github("hnishio/cellssm")
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
# Load packages
library(cellssm)
# Create an output directory
out <- "07_lm_signal"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
help(lm_signal)
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
cell_list <- list(cell1, cell2, cell3, cell4)
mvtime = chloroplast_mvtime
ex_name = "microbeam"
unit1 = "micrometer"
unit2 = "min"
### Test the package
devtools::document()
devtools::check()
### Test the package
devtools::document()
### Test the package
devtools::document()
### Test the package
devtools::document()
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
# Load packages
library(cellssm)
# Load data of chloroplast movements
data("cell1", "cell2", "cell3", "cell4", "visual")
cell_list <- list(cell1, cell2, cell3, cell4)
# Predict movement
nomodel(cell_list = cell_list, out = "04_nomodel",
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min") # When you don't have any visual estimation of the start time
# Predict movement
nomodel(cell_list = cell_list, out = "04_nomodel",
res_name = "chloroplast", ex_name = "microbeam", graph_title = "WT cell"
unit1 = "micrometer", unit2 = "min") # When you don't have any visual estimation of the start time
# Predict movement
nomodel(cell_list = cell_list, out = "04_nomodel",
res_name = "chloroplast", ex_name = "microbeam", graph_title = "WT cell",
unit1 = "micrometer", unit2 = "min") # When you don't have any visual estimation of the start time
# Predict movement
nomodel(cell_list = cell_list, out = "04_nomodel", df_name = "WT_cell",
res_name = "chloroplast", ex_name = "microbeam", graph_title = "WT cell",
unit1 = "micrometer", unit2 = "min") # When you don't have any visual estimation of the start time
# Load packages
library(cellssm)
# Create an output directory
out <- "05_lm_dist_beta"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
## Bayes
# Load data of chloroplast movements
mvtime <- as.data.frame(data.table::fread(
"02_ssm_individual/csv/ssm_individual_chloroplast_mvtime.csv"))
# Load data
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
cell_list <- list(cell1, cell2, cell3, cell4)
# Linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual",
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustF.pdf"),
g, height = 104, width = 168, units = "mm"))
# Robust linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual", robust = T,
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustT.pdf"),
g, height = 104, width = 168, units = "mm"))
# Linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual",
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "topright")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustF.pdf"),
g, height = 104, width = 168, units = "mm"))
# Linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual",
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomright")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustF.pdf"),
g, height = 104, width = 168, units = "mm"))
# Linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual",
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomright")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustF.pdf"),
g, height = 104, width = 168, units = "mm"))
# Linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual",
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomleft")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustF.pdf"),
g, height = 104, width = 168, units = "mm"))
### Test the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
# Create an output directory
out <- "05_lm_dist_beta"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
## Bayes
# Load data of chloroplast movements
mvtime <- as.data.frame(data.table::fread(
"02_ssm_individual/csv/ssm_individual_chloroplast_mvtime.csv"))
# Load data
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
cell_list <- list(cell1, cell2, cell3, cell4)
# Linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual",
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomright")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustF.pdf"),
g, height = 104, width = 168, units = "mm"))
# Robust linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual", robust = T,
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustT.pdf"),
g, height = 104, width = 168, units = "mm"))
# Robust linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = mvtime,
ssm_path = "02_ssm_individual", robust = T,
ssm_method = "Bayes", res_name = "chloroplast",
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "topright")
# Save output
g <- (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) +
(glist[[3]] + labs(tag = "C")) + (glist[[4]] + labs(tag = "D")) +
(glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta_robustT.pdf"),
g, height = 104, width = 168, units = "mm"))
# Load packages
library(cellssm)
# Create an output directory
out <- "06_lm_dist_start"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustF.pdf"),
g, height = 110, width = 50*3, units = "mm")
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime, robust = T,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime, robust = T,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomright")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustT.pdf"),
g, height = 110, width = 50*3, units = "mm")
### Test the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
# Create an output directory
out <- "06_lm_dist_start"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustF.pdf"),
g, height = 110, width = 50*3, units = "mm")
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime, robust = T,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomright")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustT.pdf"),
g, height = 110, width = 50*3, units = "mm")
### Test the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
# Create an output directory
out <- "06_lm_dist_start"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustF.pdf"),
g, height = 110, width = 50*3, units = "mm")
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime, robust = T,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomright")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustT.pdf"),
g, height = 110, width = 50*3, units = "mm")
### Test the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustF.pdf"),
g, height = 110, width = 50*3, units = "mm")
# dist vs. start
glist <- lm_dist_start(cell_list = cell_list, mvtime = mvtime, robust = T,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "bottomright")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(ncol = 3)
ggsave(paste0(out, "/individual_chloroplast_lm_dist_start_robustT.pdf"),
g, height = 110, width = 50*3, units = "mm")
### Test the package
devtools::document()
install.packages("../cellssm", repos = NULL, type = "source")
# Load packages
library(cellssm)
# Create an output directory
out <- "07_lm_signal"
if(file.exists(out)==F){
dir.create(out, recursive=T)
}
# Linear regression
glist <- lm_signal(cell_list = cell_list, mvtime = mvtime,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] + glist[[6]] +
plot_layout(ncol = 3)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_signal_robustF.pdf"),
g, height = 110, width = 50*3, units = "mm"))
# Linear regression
glist <- lm_signal(cell_list = cell_list, mvtime = mvtime, robust = T,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min",
eq_pos = "topright")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] + glist[[6]] +
plot_layout(ncol = 3)
suppressWarnings(ggsave(paste0(out, "/individual_chloroplast_lm_signal_robustT.pdf"),
g, height = 110, width = 50*3, units = "mm"))
devtools::build_manual()
devtools::check()
remotes::install_github("hnishio/cellssm")
#install.packages("devtools")
devtools::install_github("hnishio/cellssm")
remotes::install_github("hnishio/cellssm")
remotes::install_github("hnishio/cellssm")
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
remotes::install_github("hnishio/cellssm")
library(cellssm)
### Test the package
devtools::document()
### Test the package
devtools::document()
help(lm_signal)
data("cell1", "cell2", "cell3", "cell4", "chloroplast_mvtime")
cell_list <- list(cell1, cell2, cell3, cell4)
glist <- lm_signal(cell_list = cell_list, mvtime = chloroplast_mvtime,
ex_name = "microbeam", unit1 = "micrometer", unit2 = "min", robust=T)
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] + glist[[6]] +
patchwork::plot_layout(ncol = 3)
out <- "07_lm_signal"
if(file.exists(out)==FALSE){
dir.create(out, recursive=TRUE)
}
suppressWarnings(ggplot2::ggsave(paste0(out, "/individual_chloroplast_lm_signal.pdf"),
g, height = 110, width = 50*3, units = "mm"))
help(lm_dist_beta)
ssm_file <- stringr::str_split(system.file("extdata", "individual_model.stan",
package = "cellssm"), "/")[[1]]
ssm_path <- paste(ssm_file[-length(ssm_file)], collapse = "/")
glist <- lm_dist_beta(cell_list = cell_list, mvtime = chloroplast_mvtime,
ssm_path = ssm_path, ssm_method = "Bayes", robust = TRUE,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(nrow = 2)
out <- "05_lm_dist_beta"
if(file.exists(out)==FALSE){
dir.create(out, recursive=TRUE)
}
suppressWarnings(ggplot2::ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta.pdf"),
g, height = 104, width = 168, units = "mm"))
### Test the package
devtools::document()
help(lm_dist_beta)
glist <- lm_dist_beta(cell_list = cell_list, mvtime = chloroplast_mvtime,
ssm_path = ssm_path, ssm_method = "Bayes", robust = TRUE,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", eq_pos = "topright")
# Save output
g <- glist[[1]] + glist[[2]] + glist[[3]] + glist[[4]] + glist[[5]] +
patchwork::plot_layout(nrow = 2)
suppressWarnings(ggplot2::ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta.pdf"),
g, height = 104, width = 168, units = "mm"))
### Test the package
devtools::document()
help(lm_dist_beta)
# Linear regression
glist <- lm_dist_beta(cell_list = cell_list, mvtime = chloroplast_mvtime,
ssm_path = ssm_path, ssm_method = "Bayes", robust = TRUE,
res_name = "chloroplast", ex_name = "microbeam",
unit1 = "micrometer", unit2 = "min", eq_pos = "topright")
# Save output
g <-  (glist[[1]] + labs(tag = "A")) + (glist[[2]] + labs(tag = "B")) + (glist[[3]] + labs(tag = "C")) +
(glist[[4]] + labs(tag = "D")) + (glist[[5]] + labs(tag = "E")) +
patchwork::plot_layout(nrow = 2)
# Save output
suppressWarnings(ggplot2::ggsave(paste0(out, "/individual_chloroplast_lm_dist_beta.pdf"),
g, height = 104, width = 168, units = "mm"))
### Test the package
devtools::document()
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
help(labs)
### Test the package
devtools::document()
devtools::build_manual()
devtools::check()
